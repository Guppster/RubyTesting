total time reported is: 889.0
commit 55a061a0dbfd1ea96e5582a01e88984b851d3475
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 16:00:26 2017 -0400

    RPT: i001 22
    
    Installed Ruby and setup Bitbucket to be able to pull from repo.
    Spent a few minutes looking into rbenv and rvm but decided to just
    install Ruby directly from my package manager instead.

commit 740e9d33f4ea6ec234f7d04ca46dd79e504dd00c
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 16:51:13 2017 -0400

    RPT: i002 11
    
    Installed RubyGem from rubygems.org and bundler from bundler.io without
    any problems.

commit d09f3218addd4414514f4f2482133fa81742335b
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 17:58:02 2017 -0400

    RPT: r001 30
    
    Starting this task I began looking for the countdown file that
    was specified in the r001_description. I was unable to find the file in
    the folder specified so I asked a classmate for the location. After
    retrieving the hidden file from the bin directory I installed the
    minitest gem, made countdown into a method and began writing a test for
    the method.

commit f4fc2961dcc130944d3335a53c6d80c287487075
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 19:48:37 2017 -0400

    RPT: r001 30
    
    Solves step one. One challenge I ran into was that the assertion was
    failing because the recorded time was slighty larger than 120 seconds
    and i solved this by rounding the result

commit 851b86d5108aaab0637054e69c5bed93a5eee05e
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 20:10:54 2017 -0400

    RPT: r001 21
    
    Finished steps two and three. Used reek to repair all the code
    smells. I struggled to come up with variable names that reek found
    acceptable but eventually found some.

commit 3644bfef87b9d4086e7fe1e6ebf2087aa4c6bcb8
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 20:43:48 2017 -0400

    RPT: r001 30
    
    Finished step 4 and 5 by implementing QuietPrintMethod and fixing code smells.
    Looked up how to make interfaces in Ruby because there should be one
    describing QuietPrintMethod and PrintMethod because they both
    provide print functionality but to my surprise ruby
    doesn't even support interfaces.

commit 249f934f1448100f549b1eb24028b81d5a529308
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 21:17:28 2017 -0400

    RPT: r001 30
    
    Finished functional part of step 6. Still need to correct reek results.
    Experimented with different ways of obtaining duration in
    QuietPrintMethod and found a clean way that works. I am finding instance
    varible notation in Ruby very confusing. '@' is annoying.

commit b8b5c51381dbdf437fb93ed93d20f5415f9f4f9e
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Sep 27 21:35:34 2017 -0400

    RPT: r001 12
    
    Fixed code smells but one about the camel case varible names still
    exists because the instructions also use a camel case name for the
    timeInterval method. Found and fixed a bug with the duration counting
    part of quietprinter

commit efab96924ec99e54d6f9f373d5ed5cc20184e142
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 14:01:49 2017 -0400

    RPT: r002 30
    
    I am at 2 errors. Working on undefined method total.
    Figured out how to create a constructor and a constant to eliminate two
    previous errors.

commit a0daad1c84ba0d448e67729db04aae83c437a138
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 15:26:30 2017 -0400

    RPT: r002 10
    
    Solved errors and achieved two failures. Need to implement total and
    scan to solve failures. Satisfied reek requirements

commit 3c84eb692bc8105c415b05df96dd2a3937bf50c9
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 16:10:00 2017 -0400

    RPT: r002 30
    
    Still have two failures from unimplemented total and sale but I have now
    created the object structures required to support the functionality they
    need. I created a Store class that contains an array of Item objects
    each with a discount struct.

commit c7e52ee79834f15c74cadc5b3502262a8a0fc557
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 16:30:22 2017 -0400

    RPT: r002 20
    
    Fixed all reek warnings and implemented sale.
    Storted implementing total functionality.
    Improved Item data struct

commit dbcdb9396daa223f59c8e77fccc2da9a627e6cae
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 17:10:00 2017 -0400

    RPT: r002 30
    
    Learned about the inject functionality on objects and tried using that
    to sum up my items in receipt but ran into the issue of not knowing
    how many of each item i have sold Therefore had to change the receipt
    into an Hash. Learned more about Structs and used one to make Discount
    object with an evaluate function

commit f4ae19b5907b77ceadcaf3b3e3cb90a80ece1854
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 17:45:30 2017 -0400

    RPT: r002 30
    
    Currently at 2 failures 0 errors. Figured out how to evaluate deals
    based on item and how to calculate final price. Still having issues with
    2 tests both use AAA as receipt. Its an edge case error that should be
    easy to solve

commit 6ed2f2d8e9a8771b6c3b09e54b0518599ef6c7b7
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Wed Oct 4 18:32:17 2017 -0400

    RPT: r002 30
    
    All test cases passing. Had to inverse discount numbers to get the
    correct value for subtracting from the original cost. Spent some time
    satisfying all reek requirements

commit 857dfc72c3631b9a1dd3adb11b74a98d47415c66
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 16 23:55:27 2017 +0000

    RPT: r003 30
    
    Copied over the files, and created the justify method.
    Solved the first test by using an nil check.
    9 failures remain.
    Planned out how to code the justify method

commit 39a489bdab3c598ff9336e6c9d5995b76c3e4a3d
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 17 01:39:25 2017 +0000

    RPT: r003 30
    
    Found a way to split words, and find the exact number of spaces needed
    in between words for the justify_line method. Currently challenged with
    placing the remainder amount of spaces into the correct positon.
    
    9 failures no errors and code smells still exist

commit c8f33e81abf7395f45141341140a853d4730bb1f
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 17 03:03:04 2017 +0000

    RPT: r003 30
    
    Figured out how to handle remainders in justify_line() and began working
    on justify(). 4 failures and 0 errors. Code smells still remain to be
    fixed

commit 69789b3a230a04b9edc45c607540d6b8f5e9c8c8
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Thu Oct 19 00:41:47 2017 -0400

    RPT: r003 30
    
    Finally got reek to accept my r003 code. I learned how to split up ruby code in chunks of 3 lines
    and how to avoid feature envy by putting data into instance variables. (Even though we don't create an instance of this class).
    Currently at 5 failures 0 errors.

commit b1cf8947f4e6baa94e18274f9138aae41c57e219
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Thu Oct 19 01:30:00 2017 -0400

    RPT: r004 30
    
    I fixed the rspec problems, read the blog post and setup simplecov.
    Then i began fixing reek problems.  Simplecov successfully found out
    the coverage of the testing.

commit 4f924ec53d2620d8d80c58c46b6f57348b1d43b2
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 24 17:30:12 2017 -0400

    RPT: r004 30
    
    Learned about the expect keyword and how to use it. Reverted an edit i made to the test files in my last commit and got them to work without having to edit the require statements. Learned about the .rspec config file in the root of the project. 24 failures right now using the new expect syntax, currently learning how to do comparisons with this syntax

commit 63dbb357666e149ebdea86ec41ffbfe4e58feb21
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 24 18:05:00 2017 -0400

    RPT: r004 30
    
    Learned the way to do comparisons with new expect syntax and fixed all errors in tests. 0 failures and 0 errors in the tests now.
    Then used the coverage report to find the line that was not being covered inside the game.rb file and wrote a test to cover when player2 wins thegame. Achieved 100% code coverage

commit 0493b717fb4b1d3cb0c07b9aad0a72771872bbaf
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 24 18:40:28 2017 -0400

    RPT: r004 30
    
    Changed accessor to reader, changed undescriptive method names to descriptive ones, and removed utiltiy functions.
    These all fixed all but one reek issue. Next is finding out how to avoid a nil check in game.rb.

commit a33786882c3f742af2bbd459735106109e8af946
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 24 19:11:37 2017 -0400

    RPT: r004 30
    
    When i fixed all the reek issues a lot of rspec tests started failing. This was due to some of the code i had renamed and moved around. I resolved all the issues and got the rspec tests running again. I also had to change some varaible names in the spec file because they were referencing variables directly and those variables had improper naming, so i also had to rename them in the spec file. Next i fixed one of the deprecation warnings by removing a line from the spec_helper file.

commit f829608a316a13ac5ffcdea8586c62b684aa00b4
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 24 19:45:29 2017 -0400

    RPT: r005 30
    
    In this iteration I downloaded the files and arranged them in the rspec format (spec directory). Then i had to create a spec_helper and require it in the spec test class. I also had to create a .rspec config file in the root of the project. Then in the spec_helper I enabled simple_cov and finally generated a coverage report as well as passing tests.

commit f1182b43cc6b0219fbc97f9c9d5f9cf6c86d53a5
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Tue Oct 24 21:50:52 2017 -0400

    RPT: r005 30
    
    Fixed many reek issues. Discovered I could make grid an instance varaible and remove a method parameter which reduced a lot of reek errors. Kept tests passing. 12 reek errors remain

commit 660493dae101ee56e3e4ea7abd8d523de2735048
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 18:41:30 2017 -0400

    RPT: r005 30
    
    Reduced 12 reek errors down to 8 by removing utility functions and
    rewriting parts of the code. Did not figure out how I can remove the
    nested loops and therefore those reek errors still exist. Still
    researching how the solution can work without the nested loops.

commit b6290e7edf4017361d5de440afe4004f5deb18d3
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 19:13:25 2017 -0400

    RPT: r006 20
    
    Finished steps 1 and 2. Test for simple array sorting works good.

commit e0a3fc5fecb098499584eaa5d8b9c550eaa7d04b
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 19:42:30 2017 -0400

    RPT: r006 25
    
    Finished Step 3 and got 100% coverage by writing two more tests. Learned
    about the sort method on arrays and used it to clean up my tests.

commit 991e7065dc05b9f8705c6e44e644295fb0eb306b
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 20:15:27 2017 -0400

    RPT: r006 30
    
    Almost finished step 4. Fixed most reek issues, only 4 reek issues
    remain. I have improved a lot at satisfying reek, spliting stuff into
    methods has gotten easier in Ruby.

commit e5732ec512d9c092040c3b3aac774ac720d7b24e
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 21:34:09 2017 -0400

    RPT: r006 30
    
    Finished step 4 and started 5. Fixed remaining reek issues in the
    heap_sort file. Described the array_watcher class and learned lots about
    methods you can write for classes in ruby. Specifically researched
    "self.{name}" methods and then methods with operator syntax. I think
    these are really useful and can't wait to implement them

commit 61e00c013081ac476ef48abb95aa30fcc2e28f1b
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 22:55:14 2017 -0400

    RPT: r006 30
    
    Finished creating and testing ArrayWatcher. All tests pass and reek is
    satisfied. Had to look up attr_reader / attr_accessor again because i
    forgot about them.

commit 9585493e01e25413788eb2a95dbdf0cc2c8a821c
Author: Gurpreet Singh <gurpreet@mailfence.com>
Date:   Mon Oct 30 23:33:35 2017 -0400

    RPT: r006 28
    
    Implemented the performance testing code using array_watcher as a test
    inside the spec of heap_sort. Test is failing but I didn't have time to
    diagnose the error. Next time i continue I will ask for help on this
    topic as im not sure if im comparing the BIG O correctly using the array
    operations counter.

